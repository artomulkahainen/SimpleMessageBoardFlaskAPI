"""empty message

Revision ID: 24fe9cfcac53
Revises: 
Create Date: 2020-10-30 13:42:46.090456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '24fe9cfcac53'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relationship')
    op.drop_table('users')
    op.drop_table('postlikes')
    op.drop_table('posts')
    op.drop_table('postcomments')
    op.drop_table('photocomments')
    op.drop_table('photolikes')
    op.drop_table('photos')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('photos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='photos_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='photos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('photolikes',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('photo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name='photolikes_photo_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='photolikes_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'photo_id', name='photolikes_pkey')
    )
    op.create_table('photocomments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('photo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name='photocomments_photo_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='photocomments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='photocomments_pkey')
    )
    op.create_table('postcomments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='postcomments_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='postcomments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='postcomments_pkey')
    )
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('posts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('post', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='posts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('postlikes',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='postlikes_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='postlikes_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name='postlikes_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('relationship',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user2_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], name='relationship_user2_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='relationship_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'user2_id', name='relationship_pkey')
    )
    # ### end Alembic commands ###
